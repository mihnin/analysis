
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
root_dir = Path(__file__).parent.parent.parent.parent
sys.path.insert(0, str(root_dir))
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑–Ω—ã—Ö –∫–æ–Ω–≤–µ–Ω—Ü–∏–π —Å–ø–∏—Å–∞–Ω–∏—è (+ –∏ -)
"""
import pandas as pd
import numpy as np
import sys
import io
from src.utils import data_validation as dv

sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

print("=" * 80)
print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ë–†–ê–ë–û–¢–ö–ò –†–ê–ó–ù–´–• –ö–û–ù–í–ï–ù–¶–ò–ô –°–ü–ò–°–ê–ù–ò–Ø")
print("=" * 80)

# –¢–ï–°–¢ 1: –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç)
print("\n" + "=" * 80)
print("–¢–ï–°–¢ 1: –°–ü–ò–°–ê–ù–ò–ï –ö–ê–ö –ü–û–õ–û–ñ–ò–¢–ï–õ–¨–ù–û–ï –ß–ò–°–õ–û (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–æ–Ω–≤–µ–Ω—Ü–∏—è)")
print("=" * 80)

df_positive = pd.DataFrame({
    '–î–∞—Ç–∞': pd.date_range('2024-01-01', periods=10, freq='D'),
    '–ú–∞—Ç–µ—Ä–∏–∞–ª': ['MAT-001'] * 10,
    '–§–∏–ª–∏–∞–ª': ['–§–∏–ª–∏–∞–ª 1'] * 10,
    '–ù–∞—á–∞–ª–æ': [100, 110, 130, 120, 140, 145, 155, 150, 160, 165],
    '–ü—Ä–∏—Ö–æ–¥': [20, 30, 10, 40, 25, 30, 15, 35, 30, 20],
    '–°–ø–∏—Å–∞–Ω–∏–µ': [10, 10, 20, 20, 20, 20, 20, 25, 25, 30],  # –ü–û–õ–û–ñ–ò–¢–ï–õ–¨–ù–´–ï
    '–ö–æ–Ω–µ—Ü': [110, 130, 120, 140, 145, 155, 150, 160, 165, 155]
})

print("\n–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫):")
print(df_positive[['–î–∞—Ç–∞', '–ù–∞—á–∞–ª–æ', '–ü—Ä–∏—Ö–æ–¥', '–°–ø–∏—Å–∞–Ω–∏–µ', '–ö–æ–Ω–µ—Ü']].head())

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
df_positive['–ü—Ä–æ–≤–µ—Ä–∫–∞'] = df_positive['–ù–∞—á–∞–ª–æ'] + df_positive['–ü—Ä–∏—Ö–æ–¥'] - df_positive['–°–ø–∏—Å–∞–Ω–∏–µ']
df_positive['–ë–∞–ª–∞–Ω—Å OK'] = (df_positive['–ü—Ä–æ–≤–µ—Ä–∫–∞'] == df_positive['–ö–æ–Ω–µ—Ü'])
print(f"\n–ë–∞–ª–∞–Ω—Å —Å—Ö–æ–¥–∏—Ç—Å—è: {df_positive['–ë–∞–ª–∞–Ω—Å OK'].all()}")

# –ê–Ω–∞–ª–∏–∑
detection = dv.detect_consumption_convention(df_positive, '–°–ø–∏—Å–∞–Ω–∏–µ', '–ù–∞—á–∞–ª–æ', '–ö–æ–Ω–µ—Ü', '–ü—Ä–∏—Ö–æ–¥')
print(f"\n‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –∫–æ–Ω–≤–µ–Ω—Ü–∏—è: {detection['convention']}")
print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {detection['confidence']:.1f}%")
print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {detection['recommendation']}")

# –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
df_norm, det = dv.normalize_consumption(df_positive, '–°–ø–∏—Å–∞–Ω–∏–µ', 'AUTO', '–ù–∞—á–∞–ª–æ', '–ö–æ–Ω–µ—Ü', '–ü—Ä–∏—Ö–æ–¥')
print(f"\n‚úÖ –ü–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏: –°–ø–∏—Å–∞–Ω–∏–µ –æ—Å—Ç–∞–µ—Ç—Å—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º")
print(df_norm[['–°–ø–∏—Å–∞–Ω–∏–µ']].head())

# –¢–ï–°–¢ 2: –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–æ–Ω–≤–µ–Ω—Ü–∏—è)
print("\n" + "=" * 80)
print("–¢–ï–°–¢ 2: –°–ü–ò–°–ê–ù–ò–ï –ö–ê–ö –û–¢–†–ò–¶–ê–¢–ï–õ–¨–ù–û–ï –ß–ò–°–õ–û (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–æ–Ω–≤–µ–Ω—Ü–∏—è)")
print("=" * 80)

df_negative = pd.DataFrame({
    '–î–∞—Ç–∞': pd.date_range('2024-01-01', periods=10, freq='D'),
    '–ú–∞—Ç–µ—Ä–∏–∞–ª': ['MAT-002'] * 10,
    '–§–∏–ª–∏–∞–ª': ['–§–∏–ª–∏–∞–ª 2'] * 10,
    '–ù–∞—á–∞–ª–æ': [100, 110, 130, 120, 140, 145, 155, 150, 160, 165],
    '–ü—Ä–∏—Ö–æ–¥': [20, 30, 10, 40, 25, 30, 15, 35, 30, 20],
    '–°–ø–∏—Å–∞–Ω–∏–µ': [-10, -10, -20, -20, -20, -20, -20, -25, -25, -30],  # –û–¢–†–ò–¶–ê–¢–ï–õ–¨–ù–´–ï
    '–ö–æ–Ω–µ—Ü': [110, 130, 120, 140, 145, 155, 150, 160, 165, 155]
})

print("\n–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫):")
print(df_negative[['–î–∞—Ç–∞', '–ù–∞—á–∞–ª–æ', '–ü—Ä–∏—Ö–æ–¥', '–°–ø–∏—Å–∞–Ω–∏–µ', '–ö–æ–Ω–µ—Ü']].head())

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ (–¥–ª—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∞–Ω–∏—è –Ω—É–∂–Ω–æ –ü–†–ò–ë–ê–í–ò–¢–¨)
df_negative['–ü—Ä–æ–≤–µ—Ä–∫–∞'] = df_negative['–ù–∞—á–∞–ª–æ'] + df_negative['–ü—Ä–∏—Ö–æ–¥'] + df_negative['–°–ø–∏—Å–∞–Ω–∏–µ']  # + –ø–æ—Ç–æ–º—É —á—Ç–æ —É–∂–µ –æ—Ç—Ä–∏—Ü.
df_negative['–ë–∞–ª–∞–Ω—Å OK'] = (df_negative['–ü—Ä–æ–≤–µ—Ä–∫–∞'] == df_negative['–ö–æ–Ω–µ—Ü'])
print(f"\n–ë–∞–ª–∞–Ω—Å —Å—Ö–æ–¥–∏—Ç—Å—è: {df_negative['–ë–∞–ª–∞–Ω—Å OK'].all()}")

# –ê–Ω–∞–ª–∏–∑
detection = dv.detect_consumption_convention(df_negative, '–°–ø–∏—Å–∞–Ω–∏–µ', '–ù–∞—á–∞–ª–æ', '–ö–æ–Ω–µ—Ü', '–ü—Ä–∏—Ö–æ–¥')
print(f"\n‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –∫–æ–Ω–≤–µ–Ω—Ü–∏—è: {detection['convention']}")
print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {detection['confidence']:.1f}%")
print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {detection['recommendation']}")

# –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
df_norm, det = dv.normalize_consumption(df_negative, '–°–ø–∏—Å–∞–Ω–∏–µ', 'AUTO', '–ù–∞—á–∞–ª–æ', '–ö–æ–Ω–µ—Ü', '–ü—Ä–∏—Ö–æ–¥')
print(f"\n‚úÖ –ü–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏: –°–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ")
print("–î–æ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏:")
print(df_negative[['–°–ø–∏—Å–∞–Ω–∏–µ']].head())
print("\n–ü–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏:")
print(df_norm[['–°–ø–∏—Å–∞–Ω–∏–µ']].head())

# –¢–ï–°–¢ 3: –°–º–µ—à–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏ + –∏ -)
print("\n" + "=" * 80)
print("–¢–ï–°–¢ 3: –°–ú–ï–®–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï (–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ)")
print("=" * 80)

df_mixed = pd.DataFrame({
    '–î–∞—Ç–∞': pd.date_range('2024-01-01', periods=10, freq='D'),
    '–ú–∞—Ç–µ—Ä–∏–∞–ª': ['MAT-003'] * 10,
    '–§–∏–ª–∏–∞–ª': ['–§–∏–ª–∏–∞–ª 3'] * 10,
    '–ù–∞—á–∞–ª–æ': [100] * 10,
    '–ü—Ä–∏—Ö–æ–¥': [0] * 10,
    '–°–ø–∏—Å–∞–Ω–∏–µ': [10, -5, 15, -8, 12, 20, -3, 18, -10, 25],  # –°–ú–ï–®–ê–ù–ù–´–ï
    '–ö–æ–Ω–µ—Ü': [90] * 10
})

print("\n–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
print(df_mixed[['–î–∞—Ç–∞', '–°–ø–∏—Å–∞–Ω–∏–µ']].head(10))

# –ê–Ω–∞–ª–∏–∑
detection = dv.detect_consumption_convention(df_mixed, '–°–ø–∏—Å–∞–Ω–∏–µ', '–ù–∞—á–∞–ª–æ', '–ö–æ–Ω–µ—Ü', '–ü—Ä–∏—Ö–æ–¥')
print(f"\n‚ö†Ô∏è  –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –∫–æ–Ω–≤–µ–Ω—Ü–∏—è: {detection['convention']}")
print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {detection['confidence']:.1f}%")
print(f"   –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö: {detection['positive_count']}, –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö: {detection['negative_count']}")
print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {detection['recommendation']}")

# –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è (–ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è –º–æ–¥—É–ª—å)
df_norm, det = dv.normalize_consumption(df_mixed, '–°–ø–∏—Å–∞–Ω–∏–µ', 'AUTO', '–ù–∞—á–∞–ª–æ', '–ö–æ–Ω–µ—Ü', '–ü—Ä–∏—Ö–æ–¥')
print(f"\n‚úÖ –ü–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏: –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–∞–ª–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ (–º–æ–¥—É–ª—å)")
print("–î–æ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏:")
print(df_mixed[['–°–ø–∏—Å–∞–Ω–∏–µ']].head(10))
print("\n–ü–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏:")
print(df_norm[['–°–ø–∏—Å–∞–Ω–∏–µ']].head(10))

# –¢–ï–°–¢ 4: –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
print("\n" + "=" * 80)
print("–¢–ï–°–¢ 4: –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –ò–ó –§–ê–ô–õ–ê")
print("=" * 80)

try:
    df_real = pd.read_excel('datasets/inventory_dataset_monthly 2021-2023.xlsx')

    consumption_col = df_real.columns[6]  # –°–ø–∏—Å–∞–Ω–æ/–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ
    start_col = df_real.columns[4]
    end_col = df_real.columns[7]
    arrival_col = df_real.columns[5]

    print(f"\n–ö–æ–ª–æ–Ω–∫–∞ —Å–ø–∏—Å–∞–Ω–∏—è: {consumption_col}")
    print(f"–ü–µ—Ä–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: {df_real[consumption_col].head().tolist()}")

    # –ê–Ω–∞–ª–∏–∑
    detection = dv.print_consumption_analysis(df_real, consumption_col, start_col, end_col, arrival_col)

    # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
    df_norm, det = dv.normalize_consumption(df_real, consumption_col, 'AUTO', start_col, end_col, arrival_col)

    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏:")
    print(f"   –ú–∏–Ω: {df_norm[consumption_col].min()}")
    print(f"   –ú–∞–∫—Å: {df_norm[consumption_col].max()}")
    print(f"   –°—Ä–µ–¥–Ω–µ–µ: {df_norm[consumption_col].mean():.2f}")
    print(f"   –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π: {(df_norm[consumption_col] < 0).sum()}")

except FileNotFoundError:
    print("‚ö†Ô∏è  –§–∞–π–ª datasets/inventory_dataset_monthly 2021-2023.xlsx –Ω–µ –Ω–∞–π–¥–µ–Ω")

# –ò–¢–û–ì–ò
print("\n" + "=" * 80)
print("–ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
print("=" * 80)

print("""
‚úÖ –í–´–í–û–î: –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!

üìä –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏:
  1. ‚úÖ –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ ‚Üí –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è
  2. ‚úÖ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ ‚Üí –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ
  3. ‚úÖ –°–º–µ—à–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Üí –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –º–æ–¥—É–ª—å –∫–æ –≤—Å–µ–º –∑–Ω–∞—á–µ–Ω–∏—è–º
  4. ‚úÖ –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Üí –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –±–∞–ª–∞–Ω—Å—É

üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:

1. –†–ï–ñ–ò–ú AUTO (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):
   - –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –∫–æ–Ω–≤–µ–Ω—Ü–∏—é
   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞: –Ω–∞—á–∞–ª–æ + –ø—Ä–∏—Ö–æ–¥ - —Å–ø–∏—Å–∞–Ω–∏–µ = –∫–æ–Ω–µ—Ü
   - –ï—Å–ª–∏ –±–∞–ª–∞–Ω—Å –Ω–µ —Å—Ö–æ–¥–∏—Ç—Å—è, —Å–º–æ—Ç—Ä–∏–º –Ω–∞ –∑–Ω–∞–∫ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞
   - –í—Å–µ–≥–¥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å

2. –†–ï–ñ–ò–ú ABS (–µ—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω—ã):
   - –ü—Ä–æ—Å—Ç–æ –±–µ—Ä–µ—Ç –º–æ–¥—É–ª—å –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π
   - –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –≤—Å–µ –±—É–¥–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º
   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ—Å–ª–∏ –µ—Å—Ç—å —Å–º–µ—à–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

3. –†–ï–ñ–ò–ú POSITIVE (–µ—Å–ª–∏ —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ):
   - –î–∞–Ω–Ω—ã–µ —É–∂–µ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
   - –ü—Ä–∏–º–µ–Ω–∏—Ç—Å—è abs –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

4. –†–ï–ñ–ò–ú NEGATIVE (–µ—Å–ª–∏ —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ):
   - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –∑–Ω–∞–∫
   - –î–ª—è —Å–∏—Å—Ç–µ–º –≥–¥–µ —Å–ø–∏—Å–∞–Ω–∏–µ = —É–º–µ–Ω—å—à–µ–Ω–∏–µ = –º–∏–Ω—É—Å

üí° –í –ü–†–ò–õ–û–ñ–ï–ù–ò–ò:
   - –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è AUTO —Ä–µ–∂–∏–º
   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ–Ω–≤–µ–Ω—Ü–∏–∏
   - –í—Å–µ —Ä–∞—Å—á–µ—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Å –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
""")
