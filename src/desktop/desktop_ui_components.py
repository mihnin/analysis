
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
root_dir = Path(__file__).parent.parent.parent
sys.path.insert(0, str(root_dir))
"""
–ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è desktop –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ù–æ—Ä–Ω–∏–∫–µ–ª—å –°–ø—É—Ç–Ω–∏–∫.
"""

from PyQt6.QtWidgets import (
    QPushButton, QLabel, QFrame, QVBoxLayout, QHBoxLayout,
    QWidget, QFileDialog, QMessageBox, QProgressBar
)
from PyQt6.QtCore import Qt, pyqtSignal
from PyQt6.QtGui import QFont, QPixmap, QPainter, QColor
from src.desktop.desktop_ui_styles import *


class NornikPrimaryButton(QPushButton):
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ"""

    def __init__(self, text, parent=None):
        super().__init__(text, parent)
        self.setStyleSheet(get_primary_button_style())
        self.setCursor(Qt.CursorShape.PointingHandCursor)


class NornikSecondaryButton(QPushButton):
    """–í—Ç–æ—Ä–∏—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ"""

    def __init__(self, text, parent=None):
        super().__init__(text, parent)
        self.setStyleSheet(get_secondary_button_style())
        self.setCursor(Qt.CursorShape.PointingHandCursor)


class NornikTitleLabel(QLabel):
    """–ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ"""

    def __init__(self, text, parent=None):
        super().__init__(text, parent)
        self.setStyleSheet(get_label_title_style())
        self.setAlignment(Qt.AlignmentFlag.AlignCenter)


class NornikHeadingLabel(QLabel):
    """–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ"""

    def __init__(self, text, parent=None):
        super().__init__(text, parent)
        self.setStyleSheet(get_label_heading_style())


class NornikCaptionLabel(QLabel):
    """–ü–æ–¥–ø–∏—Å—å –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ"""

    def __init__(self, text, parent=None):
        super().__init__(text, parent)
        self.setStyleSheet(get_label_caption_style())


class NornikCard(QFrame):
    """–ö–∞—Ä—Ç–æ—á–∫–∞ (–º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è –¥–µ—Ç–∞–ª—å) –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ"""

    def __init__(self, parent=None):
        super().__init__(parent)
        self.setStyleSheet(get_card_style())
        self.setFrameShape(QFrame.Shape.StyledPanel)


class FileUploadCard(QFrame):
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞"""
    file_selected = pyqtSignal(str)  # –°–∏–≥–Ω–∞–ª –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞

    def __init__(self, title, description, file_type="Excel", parent=None):
        super().__init__(parent)
        self.file_path = None
        self.file_type = file_type

        # –û—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç
        layout = QVBoxLayout()
        layout.setSpacing(NornikMetrics.PADDING_MEDIUM)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = NornikHeadingLabel(title)
        layout.addWidget(title_label)

        # –û–ø–∏—Å–∞–Ω–∏–µ
        desc_label = NornikCaptionLabel(description)
        desc_label.setWordWrap(True)
        layout.addWidget(desc_label)

        # –ú–µ—Ç–∫–∞ —Å –∏–º–µ–Ω–µ–º —Ñ–∞–π–ª–∞
        self.file_label = QLabel("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω")
        self.file_label.setStyleSheet(f"""
            QLabel {{
                color: {NornikColors.TEXT_SECONDARY};
                font-size: {NornikFonts.SIZE_BODY}px;
                padding: {NornikMetrics.PADDING_SMALL}px;
                background-color: {NornikColors.BACKGROUND};
                border-radius: {NornikMetrics.BORDER_RADIUS_SMALL}px;
            }}
        """)
        self.file_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(self.file_label)

        # –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        self.select_btn = NornikSecondaryButton(f"üìÅ –í—ã–±—Ä–∞—Ç—å {file_type} —Ñ–∞–π–ª")
        self.select_btn.clicked.connect(self.select_file)
        layout.addWidget(self.select_btn)

        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞
        self.status_label = QLabel("")
        self.status_label.setStyleSheet(f"font-size: {NornikFonts.SIZE_CAPTION}px;")
        self.status_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(self.status_label)

        self.setLayout(layout)
        self.setStyleSheet(get_file_upload_style())

    def select_file(self):
        """–û—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞"""
        file_filter = "Excel Files (*.xlsx *.xls)"
        file_path, _ = QFileDialog.getOpenFileName(
            self,
            f"–í—ã–±–µ—Ä–∏—Ç–µ {self.file_type} —Ñ–∞–π–ª",
            "",
            file_filter
        )

        if file_path:
            self.file_path = file_path
            # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–º—è —Ñ–∞–π–ª–∞
            import os
            file_name = os.path.basename(file_path)
            self.file_label.setText(f"‚úì {file_name}")
            self.file_label.setStyleSheet(f"""
                QLabel {{
                    color: {NornikColors.SUCCESS};
                    font-size: {NornikFonts.SIZE_BODY}px;
                    font-weight: {NornikFonts.WEIGHT_SEMIBOLD};
                    padding: {NornikMetrics.PADDING_SMALL}px;
                    background-color: #E8F5E9;
                    border-radius: {NornikMetrics.BORDER_RADIUS_SMALL}px;
                }}
            """)
            self.status_label.setText("")
            self.file_selected.emit(file_path)

    def set_status(self, message, status_type="info"):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å (info, success, warning, error)"""
        color_map = {
            "info": NornikColors.INFO,
            "success": NornikColors.SUCCESS,
            "warning": NornikColors.WARNING,
            "error": NornikColors.ERROR
        }
        color = color_map.get(status_type, NornikColors.INFO)

        self.status_label.setText(message)
        self.status_label.setStyleSheet(f"""
            QLabel {{
                color: {color};
                font-size: {NornikFonts.SIZE_CAPTION}px;
                font-weight: {NornikFonts.WEIGHT_SEMIBOLD};
            }}
        """)

    def clear(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞"""
        self.file_path = None
        self.file_label.setText("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω")
        self.file_label.setStyleSheet(f"""
            QLabel {{
                color: {NornikColors.TEXT_SECONDARY};
                font-size: {NornikFonts.SIZE_BODY}px;
                padding: {NornikMetrics.PADDING_SMALL}px;
                background-color: {NornikColors.BACKGROUND};
                border-radius: {NornikMetrics.BORDER_RADIUS_SMALL}px;
            }}
        """)
        self.status_label.setText("")


class NornikProgressBar(QProgressBar):
    """–ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ"""

    def __init__(self, parent=None):
        super().__init__(parent)
        self.setStyleSheet(get_progress_bar_style())
        self.setTextVisible(True)
        self.setAlignment(Qt.AlignmentFlag.AlignCenter)


class NornikHeader(QWidget):
    """–®–∞–ø–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º"""

    def __init__(self, parent=None):
        super().__init__(parent)

        # –û—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç
        layout = QHBoxLayout()
        layout.setContentsMargins(
            NornikMetrics.PADDING_LARGE,
            NornikMetrics.PADDING_MEDIUM,
            NornikMetrics.PADDING_LARGE,
            NornikMetrics.PADDING_MEDIUM
        )

        # –õ–æ–≥–æ—Ç–∏–ø (—Ç–µ–∫—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è, —Ç.–∫. –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
        logo_container = QWidget()
        logo_layout = QVBoxLayout()
        logo_layout.setSpacing(0)

        logo_text = QLabel("–ù–û–†–ù–ò–ö–ï–õ–¨")
        logo_text.setStyleSheet(f"""
            QLabel {{
                font-size: 20px;
                font-weight: {NornikFonts.WEIGHT_BOLD};
                color: {NornikColors.DARK_BLUE};
                letter-spacing: 2px;
            }}
        """)

        subtitle_text = QLabel("–°–ü–£–¢–ù–ò–ö")
        subtitle_text.setStyleSheet(f"""
            QLabel {{
                font-size: {NornikFonts.SIZE_CAPTION}px;
                font-weight: {NornikFonts.WEIGHT_REGULAR};
                color: {NornikColors.GRAY};
                letter-spacing: 3px;
            }}
        """)

        logo_layout.addWidget(logo_text)
        logo_layout.addWidget(subtitle_text)
        logo_container.setLayout(logo_layout)

        layout.addWidget(logo_container)

        # –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app_title = QLabel("–ê–Ω–∞–ª–∏–∑ –∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∞—Å–æ–≤")
        app_title.setStyleSheet(f"""
            QLabel {{
                font-size: {NornikFonts.SIZE_HEADING}px;
                font-weight: {NornikFonts.WEIGHT_SEMIBOLD};
                color: {NornikColors.TEXT_PRIMARY};
            }}
        """)
        layout.addWidget(app_title, 1, Qt.AlignmentFlag.AlignCenter)

        # –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ç—è–∂–∫—É —Å–ø—Ä–∞–≤–∞ –¥–ª—è –±–∞–ª–∞–Ω—Å–∞
        layout.addStretch()

        # –§–æ–Ω —à–∞–ø–∫–∏
        self.setStyleSheet(f"""
            QWidget {{
                background-color: {NornikColors.WHITE};
                border-bottom: 3px solid {NornikColors.PRIMARY_BLUE};
            }}
        """)

        self.setLayout(layout)
        self.setFixedHeight(80)


class InfoCard(QFrame):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å –∏–∫–æ–Ω–∫–æ–π"""

    def __init__(self, title, description, icon="‚ÑπÔ∏è", color=None, parent=None):
        super().__init__(parent)

        if color is None:
            color = NornikColors.PRIMARY_BLUE

        layout = QHBoxLayout()
        layout.setSpacing(NornikMetrics.PADDING_MEDIUM)

        # –ò–∫–æ–Ω–∫–∞
        icon_label = QLabel(icon)
        icon_label.setStyleSheet(f"""
            QLabel {{
                font-size: 32px;
                padding: {NornikMetrics.PADDING_MEDIUM}px;
            }}
        """)
        layout.addWidget(icon_label, 0, Qt.AlignmentFlag.AlignTop)

        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        content_layout = QVBoxLayout()
        content_layout.setSpacing(NornikMetrics.PADDING_SMALL)

        title_label = QLabel(title)
        title_label.setStyleSheet(f"""
            QLabel {{
                font-size: {NornikFonts.SIZE_HEADING}px;
                font-weight: {NornikFonts.WEIGHT_SEMIBOLD};
                color: {color};
            }}
        """)

        desc_label = QLabel(description)
        desc_label.setWordWrap(True)
        desc_label.setStyleSheet(f"""
            QLabel {{
                font-size: {NornikFonts.SIZE_BODY}px;
                color: {NornikColors.TEXT_SECONDARY};
            }}
        """)

        content_layout.addWidget(title_label)
        content_layout.addWidget(desc_label)

        layout.addLayout(content_layout, 1)

        self.setLayout(layout)
        self.setStyleSheet(f"""
            QFrame {{
                background-color: {NornikColors.WHITE};
                border-left: 4px solid {color};
                border-radius: {NornikMetrics.BORDER_RADIUS_MEDIUM}px;
                padding: {NornikMetrics.PADDING_MEDIUM}px;
            }}
        """)


def show_message_box(parent, title, message, message_type="info"):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ.

    Args:
        parent: –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç
        title: –ó–∞–≥–æ–ª–æ–≤–æ–∫
        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        message_type: –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è ("info", "success", "warning", "error")
    """
    msg_box = QMessageBox(parent)
    msg_box.setWindowTitle(title)
    msg_box.setText(message)
    msg_box.setStyleSheet(get_message_box_style(message_type))

    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É
    icon_map = {
        "info": QMessageBox.Icon.Information,
        "success": QMessageBox.Icon.Information,
        "warning": QMessageBox.Icon.Warning,
        "error": QMessageBox.Icon.Critical
    }
    msg_box.setIcon(icon_map.get(message_type, QMessageBox.Icon.Information))

    return msg_box.exec()


def show_question_box(parent, title, message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –≤–æ–ø—Ä–æ—Å–æ–º (–î–∞/–ù–µ—Ç)"""
    msg_box = QMessageBox(parent)
    msg_box.setWindowTitle(title)
    msg_box.setText(message)
    msg_box.setStyleSheet(get_message_box_style("info"))
    msg_box.setIcon(QMessageBox.Icon.Question)
    msg_box.setStandardButtons(
        QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
    )

    # –†—É—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫
    msg_box.button(QMessageBox.StandardButton.Yes).setText("–î–∞")
    msg_box.button(QMessageBox.StandardButton.No).setText("–ù–µ—Ç")

    return msg_box.exec() == QMessageBox.StandardButton.Yes
